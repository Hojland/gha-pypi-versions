name: main-cicd

on:
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch:

env:
  APPLICATION_NAME: gha-pypi-versions

jobs:
  tag_and_release:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: "0"

      - name: "Git: Configure local settings"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: "Setup: Calculate next version number"
        uses: mathieudutour/github-tag-action@v5.2
        id: version
        with:
          tag_prefix: "v"
          dry_run: true
          default_bump: patch
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Changelog: Create full changelog for commit and release"
        uses: nwillems/github-changelog-action@patch-1
        id: changelog
        with:
          filename: CHANGELOG.md
          next_version: ${{ steps.version.outputs.new_version }}

      - name: "Git: Commit changed files and tag release"
        run: |
          git add CHANGELOG.md
          git commit -m "Changelog updated" CHANGELOG.md
          git tag -m "$Tagged new version: ${{ steps.version.outputs.new_version }}" -fa ${{ steps.version.outputs.new_tag }}
          git push --tags

      - name: "Github: Create test release"
        uses: ncipollo/release-action@v1
        id: test-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: test
          release_name: Release ${{ steps.version.outputs.new_version }}
          draft: false
          prerelease: false
          body: ${{ steps.changelog.outputs.changelog }}

      - name: "Github: Create release"
        uses: actions/create-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.version.outputs.new_tag }}
          name: Release test
          draft: false
          prerelease: false
          replacesArtifacts: true
          body: ${{ steps.changelog.outputs.changelog }}

  test:
    runs-on: ubuntu-latest
    needs: tag_and_release
    outputs:
      mlflow-versions: ${{ steps.mlflow-version.outputs.versions }}
    steps:
      - uses: actions/checkout@v2
      - uses: hojland/gha-pypi-versions@test
        id: mlflow-version
        with:
          pkg_name: mlflow
          latest_num: 5